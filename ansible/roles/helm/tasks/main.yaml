---
- name: Import facts
  ansible.builtin.import_role:
    name: k3s
    tasks_from: facts

- name: Role Validation
  ansible.builtin.import_tasks:
    file: validation.yaml

- name: Role Provisioning
  when: ansible_host in k3s_server_hosts
  block:
    - name: Install packages
      apt:
        name:
          - apt-transport-https
          - python3-kubernetes
          - python3-debian
        state: present

    - name: Add variables to environment file
      ansible.builtin.lineinfile:
        path: /etc/environment
        line: '{{ item.key }}={{ item.value }}'
        regexp: ^{{ item.key }}
      loop: "{{ lookup('ansible.builtin.dict', helm_environment_vars | combine(helm_vars.environment)) | sort(attribute='key') }}"

    - name: Initialize variables
      ansible.builtin.shell: |
        set -eo pipefail
        source /etc/environment
      args:
        executable: /bin/bash
      changed_when: true

    - name: Check if Helm is properly installed
      ansible.builtin.command:
        cmd: helm version
      register: helm_check
      ignore_errors: true
      changed_when: false

    - name: Get file status
      ansible.builtin.stat:
        path: /usr/share/keyrings/{{ helm_vars.release.key }}
      register: gpg_key
      changed_when: false

    - name: Helm Package
      when: not gpg_key.stat.exists or helm_check.rc != 0
      block:
        - name: Download key
          ansible.builtin.get_url:
            url: '{{ helm_release_key }}'
            dest: /tmp/{{ helm_vars.release.repository.key }}
            owner: root
            group: root
            mode: '0644'
          register: result
          delay: 1
          retries: 3
          until: result is not failed

        - name: Dearmor key
          ansible.builtin.command:
            cmd: gpg --dearmor -o /usr/share/keyrings/{{ helm_vars.release.key }} /tmp/{{ helm_vars.release.repository.key }}
          changed_when: dearmor_key.rc == 0
          register: dearmor_key

        - name: Remove key
          ansible.builtin.file:
            path: /tmp/{{ helm_vars.release.repository.key }}
            state: absent

        - name: Get architecture
          ansible.builtin.command:
            cmd: dpkg --print-architecture
          changed_when: false
          register: architecture

        - name: Install repository
          ansible.builtin.deb822_repository:
            architectures: '{{ architecture.stdout }}'
            components: main
            name: helm-{{ helm_vars.release.repository.channel }}
            signed_by: /usr/share/keyrings/{{ helm_vars.release.key }}
            suites: all
            uris: '{{ helm_release_channel }}/{{ helm_vars.release.distro }}/'
            enabled: true
            trusted: true

        - name: Install helm package
          ansible.builtin.apt:
            name: helm
            autoremove: true
            update_cache: true

    - name: Remove Helm Plugins
      block:
        - name: Remove plugins
          kubernetes.core.helm_plugin:
            plugin_name: '{{ item.name }}'
            state: absent
          loop: '{{ helm_vars.plugins }}'

        - name: Remove plugin packages
          ansible.builtin.apt:
            name: '{{ item }}'
            state: absent
            autoremove: true
            clean: true
            purge: true
          loop: '{{ helm_plugin_packages_disabled | default([]) }}'

    - name: Install Helm Plugins
      block:
        - name: Install plugin packages
          ansible.builtin.apt:
            name: '{{ item }}'
            autoremove: true
            update_cache: true
          loop: '{{ helm_plugin_packages | default([]) }}'

        - name: Install plugins
          kubernetes.core.helm_plugin:
            plugin_path: '{{ item.repository.url }}'
            plugin_version: '{{ item.version }}'
          loop: '{{ helm_vars.plugins }}'
          register: result
          delay: 1
          retries: 3
          until: result is not failed
          when: item.enabled