toolbox:
  enabled: {{ rook_ceph_vars.kubernetes.toolbox.enabled }}
monitoring:
  enabled: {{ rook_ceph_vars.kubernetes.monitoring.enabled }}
cephClusterSpec:
  dashboard:
    enabled: {{ rook_ceph_vars.kubernetes.dashboard.enabled }}
    ssl: false
  storage:
    useAllNodes: true
    useAllDevices: true
  mon:
    count: {{ rook_ceph_vars.kubernetes.cephCluster.mon.count }}
    allowMultiplePerNode: {{ rook_ceph_vars.kubernetes.cephCluster.mon.allowMultiplePerNode }}
  mgr:
    count: {{ rook_ceph_vars.kubernetes.cephCluster.mgr.count }}
    allowMultiplePerNode: {{ rook_ceph_vars.kubernetes.cephCluster.mgr.allowMultiplePerNode }}
    modules:
      - name: pg_autoscaler
        enabled: true
      - name: rook
        enabled: true
ingress:
  dashboard:
    annotations:
      kubernetes.io/ingress.class: kong
      cert-manager.io/cluster-issuer: letsencrypt-production
    host:
      name: {{ rook_ceph_vars.kubernetes.ingress.subdomain }}.{{ domain }}
    tls:
      - hosts:
          - {{ rook_ceph_vars.kubernetes.ingress.subdomain }}.{{ domain }}
        secretName: rook-ceph-tls
    ingressClassName: kong
cephBlockPools:
  - name: ceph-blockpool
    spec:
      failureDomain: host
      replicated:
        size: {{ rook_ceph_vars.kubernetes.cephCluster.blockPool.size }}
    storageClass:
      enabled: true
      name: {{ cluster.storage_class }}
      annotations: {}
      labels: {}
      isDefault: true
      reclaimPolicy: Delete
      allowVolumeExpansion: true
      volumeBindingMode: "Immediate"
      mountOptions: []
      allowedTopologies: []
      parameters:
        imageFormat: "2"
        imageFeatures: layering
        csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
        csi.storage.k8s.io/provisioner-secret-namespace: "{{ rook_ceph_vars.kubernetes.namespace }}"
        csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
        csi.storage.k8s.io/controller-expand-secret-namespace: "{{ rook_ceph_vars.kubernetes.namespace }}"
        csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
        csi.storage.k8s.io/node-stage-secret-namespace: "{{ rook_ceph_vars.kubernetes.namespace }}"
        csi.storage.k8s.io/fstype: ext4
cephFileSystems: []
cephObjectStores:
  - name: ceph-objectstore
    spec:
      metadataPool:
        failureDomain: host
        replicated:
          size: {{ rook_ceph_vars.kubernetes.object_storage.metadataPool.size }}
      dataPool:
        failureDomain: host
        erasureCoded:
          dataChunks: 2
          codingChunks: 1
      preservePoolsOnDelete: true
      gateway:
        port: 80
        resources:
          limits:
            memory: "2Gi"
          requests:
            cpu: "1000m"
            memory: "1Gi"
        instances: 1
        priorityClassName: system-cluster-critical
    storageClass:
      enabled: true
      name: {{ rook_ceph_vars.kubernetes.object_storage.storageClass }}
      reclaimPolicy: Delete
      volumeBindingMode: "Immediate"
      annotations: {}
      labels: {}
      parameters:
        region: {{ rook_ceph_vars.kubernetes.object_storage.region }}
    ingress:
      enabled: {{ rook_ceph_vars.kubernetes.object_storage.ingress.enabled }}
      annotations:
        kubernetes.io/ingress.class: kong
        cert-manager.io/cluster-issuer: letsencrypt-production
      host:
        name: {{ rook_ceph_vars.kubernetes.object_storage.ingress.subdomain }}.{{ domain }}
      tls:
        - hosts:
            - {{ rook_ceph_vars.kubernetes.object_storage.ingress.subdomain }}.{{ domain }}
          secretName: rook-ceph-object-storage-tls
      ingressClassName: kong
