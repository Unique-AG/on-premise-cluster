---
- name: Import facts
  ansible.builtin.include_role:
    name: "{{ item }}"
    tasks_from: facts
  loop:
    - k3s
    - helm

- name: Role Validation
  ansible.builtin.import_tasks:
    file: validation.yaml

- name: Role Provisioning
  when: ansible_host in k3s_server_hosts
  block:
    - name: Validate service state
      ansible.builtin.wait_for:
        port: "{{ k3s_vars.server.api.port }}"
        state: started
        timeout: 30
      any_errors_fatal: true

    - name: Add repository
      kubernetes.core.helm_repository:
        name: "{{ nvidia_gpu_operator_vars.kubernetes.helm.repository.org }}"
        repo_url: "{{ nvidia_gpu_operator_vars.kubernetes.helm.repository.url }}"

    - name: Chart Setup
      run_once: true
      block:
        - name: Install chart
          kubernetes.core.helm:
            chart_ref: "{{ nvidia_gpu_operator_project_chart }}"
            chart_version: "{{ nvidia_gpu_operator_vars.kubernetes.helm.chart.version }}"
            create_namespace: true
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            name: "{{ nvidia_gpu_operator_vars.kubernetes.helm.chart.name }}"
            namespace: "{{ nvidia_gpu_operator_vars.kubernetes.namespace }}"
            update_repo_cache: true
            values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"
            wait: true
          register: result
          delay: 1
          retries: 3
          until: result is not failed

    - name: Setup Grafana dashboard
      run_once: true
      block:
        - name: Download NVIDIA DCGM Exporter dashboard
          ansible.builtin.get_url:
            url: "https://raw.githubusercontent.com/NVIDIA/dcgm-exporter/main/grafana/dcgm-exporter-dashboard.json"
            dest: "/tmp/dcgm-exporter-dashboard.json"
          register: dashboard_download
        - name: Create ConfigMap for NVIDIA DCGM Exporter dashboard
          kubernetes.core.k8s:
            definition:
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: grafana-dashboard-dcgm-exporter
                namespace: "{{ nvidia_gpu_operator_vars.kubernetes.namespace }}"
                labels:
                  grafana_dashboard: "1"
              data:
                dcgm-exporter-dashboard.json: "{{ lookup('file', '/tmp/dcgm-exporter-dashboard.json') | from_json | to_json }}"
          when: dashboard_download is succeeded
        - name: Remove temporary dashboard file
          ansible.builtin.file:
            path: "/tmp/dcgm-exporter-dashboard.json"
            state: absent
          when: dashboard_download is succeeded