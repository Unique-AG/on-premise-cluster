---
- name: Import facts
  ansible.builtin.include_role:
    name: "{{ item }}"
    tasks_from: facts
  loop:
    - k3s

- name: Role Validation
  ansible.builtin.import_tasks:
    file: validation.yaml

- name: Role Provisioning
  when: ansible_host in k3s_server_hosts
  block:
    - name: Validate service state
      ansible.builtin.wait_for:
        port: "{{ k3s_vars.server.api.port }}"
        state: started
        timeout: 30
      any_errors_fatal: true

    - name: Download archive
      ansible.builtin.get_url:
        url: "{{ cilium_project.release.cli.url }}"
        checksum: sha256:{{ cilium_project.release.cli.url }}.sha256sum
        dest: /tmp
        owner: root
        group: root
        mode: "644"
      register: result
      delay: 1
      retries: 3
      until: result is not failed
      check_mode: false

    - name: Install binary
      ansible.builtin.unarchive:
        src: /tmp/{{ cilium_vars.release.cli.file }}
        dest: "{{ k3s_vars.directory.bin }}"
        owner: root
        group: root
        mode: "755"
        remote_src: true

    - name: Remove archive
      ansible.builtin.file:
        path: /tmp/{{ cilium_vars.release.cli.file }}
        state: absent
      check_mode: false

    - name: Add repository
      kubernetes.core.helm_repository:
        name: "{{ cilium_vars.kubernetes.helm.repository.org }}"
        repo_url: "{{ cilium_map.helm.repository.url }}"

    - name: Install chart
      kubernetes.core.helm:
        chart_ref: "{{ cilium_map.helm.chart.reference }}"
        chart_version: "{{ cilium_vars.kubernetes.helm.chart.version }}"
        kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
        name: "{{ cilium_vars.kubernetes.helm.chart.name }}"
        namespace: "{{ cilium_vars.kubernetes.namespace }}"
        timeout: "{{ cilium_map.helm.timeout }}"
        values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"
        create_namespace: true
        update_repo_cache: true
        wait: true
      register: result
      delay: 1
      retries: 3
      until: result is not failed

    - name: Wait for Cilium to be ready
      ansible.builtin.command:
        cmd: cilium status --wait
      environment:
        KUBECONFIG: "{{ k3s_vars.directory.config }}/k3s.yaml"
      register: cilium_status
      until: cilium_status.rc == 0
      retries: 30
      delay: 10

    - name: Create LoadbalancerIP pool
      kubernetes.core.k8s:
        kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
        definition: "{{ lookup('ansible.builtin.template', 'loadbalancer-ip-pool.j2') | from_yaml }}"
        wait: true

    - name: Create BGP Peering
      block:
        - name: Create BGP Cluster Config
          kubernetes.core.k8s:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            definition: "{{ lookup('ansible.builtin.template', 'bgp-cluster-config.j2') | from_yaml }}"
            wait: true

        - name: Create BGP Peer Config
          kubernetes.core.k8s:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            definition: "{{ lookup('ansible.builtin.template', 'bgp-peer-config.j2') | from_yaml }}"
            wait: true

        - name: Create BGP Advertisement
          kubernetes.core.k8s:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            definition: "{{ lookup('ansible.builtin.template', 'bgp-advertisement.j2') | from_yaml }}"
            wait: true
