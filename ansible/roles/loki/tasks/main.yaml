---
- name: Import facts
  ansible.builtin.include_role:
    name: "{{ item }}"
    tasks_from: facts
  loop:
    - k3s
    - prometheus
    - rook_ceph

- name: Role Validation
  ansible.builtin.import_tasks:
    file: validation.yaml

- name: Role Provisioning
  when: ansible_host in k3s_server_hosts
  block:
    - name: Validate service state
      ansible.builtin.wait_for:
        port: "{{ k3s_vars.server.api.port }}"
        state: started
        timeout: 30
      any_errors_fatal: true

    - name: Add repository
      kubernetes.core.helm_repository:
        name: "{{ loki_vars.kubernetes.helm.repository.org }}"
        repo_url: "{{ loki_vars.kubernetes.helm.repository.url }}/{{ loki_vars.kubernetes.helm.repository.name }}"

    - name: Create loki resources
      run_once: true
      block:
        - name: Create loki object buckets
          kubernetes.core.k8s:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            namespace: "{{ loki_vars.kubernetes.namespace }}"
            state: present
            definition:
              apiVersion: objectbucket.io/v1alpha1
              kind: ObjectBucketClaim
              metadata:
                name: "loki-{{ item }}-bucket"
                namespace: monitoring
              spec:
                bucketName: "loki-{{ item }}"
                storageClassName: ceph-bucket
            wait: true
          loop:
            - chunks
            - ruler
            - admin

        - name: Check if Loki S3 user job exists
          kubernetes.core.k8s_info:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            kind: Job
            name: create-loki-s3-user-job
            namespace: "{{ rook_ceph_vars.kubernetes.namespace }}"
          register: loki_s3_user_job

        - name: Create loki s3 user
          kubernetes.core.k8s:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            definition: "{{ lookup('ansible.builtin.template', 'job.j2') }}"
            namespace: "{{ rook_ceph_vars.kubernetes.namespace }}"
            wait: true
          when: loki_s3_user_job.resources | length == 0

    - name: Chart Setup
      run_once: true
      block:
        - name: Install chart
          kubernetes.core.helm:
            chart_ref: "{{ loki_project_chart }}"
            chart_version: "{{ loki_vars.kubernetes.helm.chart.version }}"
            create_namespace: true
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            name: "{{ loki_vars.kubernetes.helm.chart.name }}"
            namespace: "{{ loki_vars.kubernetes.namespace }}"
            update_repo_cache: true
            values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"
            wait: true
          register: result
          delay: 1
          retries: 3
          until: result is not failed

        - name: Add Grafana datasource for Loki
          kubernetes.core.k8s:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            namespace: "{{ prometheus_vars.kubernetes.namespace }}"
            state: present
            definition:
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: loki-grafana-datasource
                labels:
                  grafana_datasource: "1"
              data:
                loki-datasource.yaml: |
                  apiVersion: 1
                  datasources:
                    - name: Loki
                      type: loki
                      access: proxy
                      url: http://{{ loki_vars.kubernetes.helm.chart.name }}-gateway.{{ loki_vars.kubernetes.namespace }}.svc:80
                      isDefault: false
