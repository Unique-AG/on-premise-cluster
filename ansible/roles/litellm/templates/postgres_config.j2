---
apiVersion: stackgres.io/v1
kind: SGInstanceProfile
metadata:
  namespace: {{ litellm_vars.kubernetes.namespace }}
  name: litellm-db-instance-profile
spec:
  cpu: "2"
  memory: "4Gi"
---
apiVersion: stackgres.io/v1
kind: SGPostgresConfig
metadata:
  namespace: {{ litellm_vars.kubernetes.namespace }}
  name: litellm-db-config
spec:
  postgresVersion: "16"
  postgresql.conf:
    shared_buffers: '512MB'
    random_page_cost: '1.5'
    password_encryption: 'scram-sha-256'
    log_checkpoints: 'on'
---
apiVersion: stackgres.io/v1
kind: SGPoolingConfig
metadata:
  namespace: {{ litellm_vars.kubernetes.namespace }}
  name: litellm-db-pooling-config
spec:
  pgBouncer:
    pgbouncer.ini:
      pgbouncer:
        pool_mode: session
        max_client_conn: '1000'
        default_pool_size: '80'
---
apiVersion: stackgres.io/v1beta1
kind: SGObjectStorage
metadata:
  namespace: {{ litellm_vars.kubernetes.namespace }}
  name: litellm-db-backup-config
spec:
  type: s3Compatible
  s3Compatible:
    endpoint: http://rook-ceph-rgw-ceph-objectstore.rook-ceph.svc
    bucket: litellm-db-backups
    enablePathStyleAddressing: true
    awsCredentials:
      secretKeySelectors:
        accessKeyId:
          key: AWS_ACCESS_KEY_ID
          name: litellm-object-storage-bucket
        secretAccessKey:
          key: AWS_SECRET_ACCESS_KEY
          name: litellm-object-storage-bucket
---
apiVersion: stackgres.io/v1
kind: SGScript
metadata:
  namespace: {{ litellm_vars.kubernetes.namespace }}
  name: litellm-db-scripts
spec:
  scripts:
  - name: create-user
    scriptFrom:
      secretKeyRef:
        name: litellm-db-user-sql
        key: create-user-sql
  - name: create-database
    scriptFrom:
      secretKeyRef:
        name: litellm-db-user-sql
        key: create-database-sql
