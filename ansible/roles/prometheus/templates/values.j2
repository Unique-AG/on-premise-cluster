alertmanager:
  alertmanagerSpec:
    replicas: {{ prometheus_vars.kubernetes.alertmanager.replicas }}
    resources:
      limits:
        cpu: {{ prometheus_vars.kubernetes.alertmanager.resources.limits.cpu }}
        memory: {{ prometheus_vars.kubernetes.alertmanager.resources.limits.memory }}
      requests:
        cpu: {{ prometheus_vars.kubernetes.alertmanager.resources.requests.cpu }}
        memory: {{ prometheus_vars.kubernetes.alertmanager.resources.requests.memory }}
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: {{ prometheus_vars.kubernetes.storage.storage_class }}
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ prometheus_vars.kubernetes.alertmanager.storage }}
  service:
    annotations:
      tailscale.com/expose: "true"
      tailscale.com/hostname: "{{ cluster.name }}-alertmanager"
      tailscale.com/tags: "tag:k8s,tag:{{ cluster.name }},{{ tailscale.tags.alertmanager }},{{ tailscale.tags.system }}"
grafana:
  grafana.ini:
    security:
      allow_embedding: true
    auth.anonymous:
      enabled: true
      org_role: Viewer
  adminUser: {{ prometheus_vars.kubernetes.grafana.admin.name }}
  adminPassword: {{ prometheus_vars.kubernetes.grafana.admin.password }}
  service:
    annotations:
      tailscale.com/expose: "true"
      tailscale.com/hostname: "{{ cluster.name }}-grafana"
      tailscale.com/tags: "tag:k8s,tag:{{ cluster.name }},{{ tailscale.tags.grafana }},{{ tailscale.tags.system }}"
kubeControllerManager:
  endpoints:
    {{ k3s_server_ips | to_nice_yaml | indent(4) }}
kubeEtcd:
  endpoints:
    {{ k3s_server_ips | to_nice_yaml | indent(4) }}
kubeProxy:
  endpoints:
    {{ k3s_server_ips | to_nice_yaml | indent(4) }}
kubeScheduler:
  endpoints:
    {{ k3s_server_ips | to_nice_yaml | indent(4) }}
prometheus:
  service:
    annotations:
      tailscale.com/expose: "true"
      tailscale.com/hostname: "{{ cluster.name }}-prometheus"
      tailscale.com/tags: "tag:k8s,tag:{{ cluster.name }},{{ tailscale.tags.prometheus }},{{ tailscale.tags.system }}"
  prometheusSpec:
    enableAdminAPI: true
    replicaExternalLabelName: replica
    resources:
      limits:
        cpu: {{ prometheus_vars.kubernetes.prometheus.resources.limits.cpu }}
        memory: {{ prometheus_vars.kubernetes.prometheus.resources.limits.memory }}
      requests:
        cpu: {{ prometheus_vars.kubernetes.prometheus.resources.requests.cpu }}
        memory: {{ prometheus_vars.kubernetes.prometheus.resources.requests.memory }}
    serviceMonitorSelectorNilUsesHelmValues: false
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: {{ prometheus_vars.kubernetes.storage.storage_class }}
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ prometheus_vars.kubernetes.prometheus.storage }}
