---
- name: Import facts
  ansible.builtin.include_role:
    name: "{{ item }}"
    tasks_from: facts
  loop:
    - k3s
    - certmanager

- name: Role Validation
  ansible.builtin.import_tasks:
    file: validation.yaml

- name: Remove Traefik and restart K3s
  run_once: true
  block:
    - name: Create skip file for Traefik
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server/manifests/traefik.yaml.skip
        state: touch
      become: true

    - name: Remove Traefik manifest
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server/manifests/traefik.yaml
        state: absent
      become: true

    - name: Uninstall Traefik
      kubernetes.core.helm:
        name: traefik
        release_namespace: kube-system
        state: absent
        kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
        wait: true
      ignore_errors: true
      register: traefik_uninstalled

    - name: Uninstall Traefik CRD
      kubernetes.core.helm:
        name: traefik-crd
        release_namespace: kube-system
        state: absent
        kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
        wait: true
      ignore_errors: true
      register: traefik_crd_uninstalled

    - name: Restart K3s service
      ansible.builtin.systemd:
        name: k3s
        state: restarted
      become: true
      when: traefik_uninstalled is changed or traefik_crd_uninstalled is changed

- name: Role Provisioning
  when: ansible_host in k3s_server_hosts
  block:
    - name: Validate service state
      ansible.builtin.wait_for:
        port: "{{ k3s_vars.server.api.port }}"
        state: started
        timeout: 30
      any_errors_fatal: true

    - name: Add repository
      kubernetes.core.helm_repository:
        name: "{{ kong_vars.kubernetes.helm.repository.org }}"
        repo_url: "{{ kong_vars.kubernetes.helm.repository.url }}"

    - name: Add custom plugins via helm
      run_once: true
      block:
        - name: Add plugin repository
          kubernetes.core.helm_repository:
            name: unique
            repo_url: https://unique-ag.github.io/helm-charts/

        - name: Install custom plugins
          kubernetes.core.helm:
            chart_ref: "{{ kong_vars.kubernetes.custom_plugins.helm.repository.name }}/{{ kong_vars.kubernetes.custom_plugins.helm.chart.name }}"
            chart_version: "{{ kong_vars.kubernetes.custom_plugins.helm.chart.version }}"
            create_namespace: true
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            name: "{{ kong_vars.kubernetes.custom_plugins.helm.chart.name }}"
            namespace: "{{ kong_vars.kubernetes.namespace }}"
            update_repo_cache: true
            wait: true
          register: plugins_result
          delay: 1
          retries: 3
          until: plugins_result is not failed

    - name: Kong Ingress Controller Chart Setup
      run_once: true
      block:
        - name: Create a ConfigMap for the gateway environment
          kubernetes.core.k8s:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            namespace: "{{ kong_vars.kubernetes.namespace }}"
            definition: "{{ lookup('ansible.builtin.template', 'gateway_environment.j2') }}"
            wait: true

        - name: Create a ConfigMap for the controller environment
          kubernetes.core.k8s:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            namespace: "{{ kong_vars.kubernetes.namespace }}"
            definition: "{{ lookup('ansible.builtin.template', 'controller_environment.j2') }}"
            wait: true

        - name: Install kong ingress controller
          kubernetes.core.helm:
            chart_ref: "{{ kong_ingress_controller_project_chart }}"
            chart_version: "{{ kong_vars.kubernetes.ingress_controller.helm.chart.version }}"
            create_namespace: true
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            name: "{{ kong_vars.kubernetes.ingress_controller.helm.chart.name }}"
            namespace: "{{ kong_vars.kubernetes.namespace }}"
            update_repo_cache: true
            values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"
            wait: true
          register: result
          delay: 1
          retries: 3
          until: result is not failed

        - name: Add Gateway Class
          kubernetes.core.k8s:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            definition: "{{ lookup('ansible.builtin.template', 'gateway_class.j2') }}"
            wait: true

        - name: Add Gateway
          kubernetes.core.k8s:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            definition: "{{ lookup('ansible.builtin.template', 'gateway.j2') }}"
            wait: true

        - name: Add JWT Plugin
          kubernetes.core.k8s:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            definition: "{{ lookup('ansible.builtin.template', 'kong_jwt_plugin.j2') }}"
            wait: true

        - name: Add App-Repo-Auth Plugin
          kubernetes.core.k8s:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            definition: "{{ lookup('ansible.builtin.template', 'kong_app_repo_plugin.j2') }}"
            wait: true

        - name: Add CORS Plugin
          kubernetes.core.k8s:
            kubeconfig: "{{ k3s_vars.directory.config }}/k3s.yaml"
            definition: "{{ lookup('ansible.builtin.template', 'kong_cors_plugin.j2') }}"
            wait: true
